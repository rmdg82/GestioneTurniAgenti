// <auto-generated />
using System;
using GestioneTurniAgenti.Server.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestioneTurniAgenti.Server.Migrations
{
    [DbContext(typeof(GestioneTurniDbContext))]
    [Migration("20210821162120_InitialDatabaseScheme")]
    partial class InitialDatabaseScheme
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Agente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Matricola")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT")
                        .IsFixedLength(true);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RepartoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RepartoId");

                    b.ToTable("Agenti");
                });

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Evento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fine")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Inizio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Eventi");

                    b.HasCheckConstraint("CK_Eventi_InizioPrecedenteFine", "Inizio <= Fine");
                });

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Reparto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Reparti");
                });

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Turno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AgenteId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AgenteId");

                    b.HasIndex("EventoId");

                    b.ToTable("Turni");
                });

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Agente", b =>
                {
                    b.HasOne("GestioneTurniAgenti.Server.Entities.Reparto", "Reparto")
                        .WithMany("Agenti")
                        .HasForeignKey("RepartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reparto");
                });

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Turno", b =>
                {
                    b.HasOne("GestioneTurniAgenti.Server.Entities.Agente", "Agente")
                        .WithMany()
                        .HasForeignKey("AgenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestioneTurniAgenti.Server.Entities.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agente");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GestioneTurniAgenti.Server.Entities.Reparto", b =>
                {
                    b.Navigation("Agenti");
                });
#pragma warning restore 612, 618
        }
    }
}
